@model twitter_clone.Models.TweetingModel

@{
    var userId = Context.Request.Cookies["UserID"];
}

<div class="h-full p-4 bg-twitter-mutedBackground">
    <!-- Sección para nuevo tweet -->
    <section class="h-auto border shadow-lg bg-twitter-background">
        <div class="m-4 flex flex-col justify-center">
            <div class="flex gap-2 justify-between items-center mb-4">
                <div class="flex items-center gap-2">
                   <img src="@Url.Content(ViewBag.PicturePath)" class="h-10 w-10 rounded-full object-cover">
                    <p class="font-bold">@ViewBag.UserFirstName @ViewBag.UserName</p> 
                </div>
                <div>
                    <div class="text-sm text-gray-500 mt-2">
                            <span id="charCount">200</span> caracteres restantes
                    </div>
                </div>
            </div>
            <form asp-action="Tweet" method="post" enctype="multipart/form-data" class="">
                <div asp-validation-summary="ModelOnly" class="text-red-500 mb-6"></div>
                 <div>
                    <div class="mb-2">
                        <input asp-for="Tweet_content" id="tweetInput" type="text" autocomplete="off" placeholder="How are you feeling today?" class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"/>
                        <span asp-validation-for="Tweet_content" class="text-red-500 text-sm"></span>
                    </div>
                    <div class="flex items-center gap-4">
                        <div class="flex items-center justify-center px-4 py-1.5">
                            <label class="flex items-center justify-center gap-2 w-full py-2 bg-transparent text-twitter-primary border-b border-twitter-primary cursor-pointer hover:border-twitter-primary-dark transition duration-300 ease-in-out">
                                <span class="">Upload Image</span>
                                <input asp-for="Tweet_image" type="file" name="Tweet_image" accept="image/*" class="hidden">
                            </label>
                        </div>
                        <div class="flex justify-center">
                            <button type="submit" class="px-4 py-1.5 text-twitter-primary border-b border-twitter-primary bg-transparent hover:border-twitter-primary-dark hover:text-twitter-primary-dark focus:outline-none transition duration-300 ease-in-out">
                                Tweet
                            </button>
                        </div>
                    </div>
                    <input asp-for="Tweet_user_id" placeholder="@userId" class="hidden"/>
                    <input asp-for="Tweet_re_id" class="hidden"/>
                 </div> 
            </form>
        </div>
    </section>
    <!-- Sección para tweets de personas a las que sigue -->
    <section class="mt-4">
        <p class="font-bold mb-4 text-twitter-primary">Tweets from people you follow</p>
        <ul>
            @foreach(var tweet in ViewBag._tweets)
            {
                <li class="flex gap-2 mb-4 p-4 rounded-md bg-white shadow-md">
                    <img src="@Url.Content(@ViewBag._tweets_users[@ViewBag._cont].User_profile_picture_path)" class="h-10 w-10 rounded-full object-cover">
                    <div>
                        <p class="font-bold">@ViewBag._tweets_users[@ViewBag._cont].User_first_name @ViewBag._tweets_users[@ViewBag._cont].User_username @tweet.Tweet_created_at.ToString("dd MMM")</p>
                        <p>@tweet.Tweet_content</p>
                        @if (@tweet.Tweet_re_id != null)
                        {
                            <div class="flex gap-2 p-4 m-2 border border-gray-300 rounded-md">
                                <img src="@Url.Content(@ViewBag._retweets_user[@ViewBag._cont_re].User_profile_picture_path)" class="h-10 rw-10 rounded-full object-cover">
                                <div>
                                    <p class="font-bold">@ViewBag._retweets_user[@ViewBag._cont_re].User_first_name @ViewBag._retweets_user[@ViewBag._cont_re].User_username @ViewBag._retweets[@ViewBag._cont_re].Tweet_created_at.ToString("dd MMM")</p>
                                    <p>@ViewBag._retweets[@ViewBag._cont_re++].Tweet_content</p>
                                </div>
                            </div>
                        }
                        <div class="mt-3 flex">
                            <div class="flex gap-4">
                                
                                <div class="flex items-center gap-2">
                                    <p id="likeCount-@tweet.Tweet_id">@tweet.Tweet_likes_quantity</p>
                                    <button id="likeButton-@tweet.Tweet_id" class="flex gap-4" data-tweet-id="@tweet.Tweet_id">
                                        <img src="@Url.Content(ViewBag._like[@ViewBag._cont++] == 1 ?  "/assets/HeartFull.svg" : "/assets/Heart.svg")" class="h-5 w-auto like-icon" alt="Like" />
                                    </button>
                                    <button id="reButton-@tweet.Tweet_id" class="flex gap-4" data-tweet-id="@tweet.Tweet_id">
                                        <img src="~/assets/Retweet.svg" class="h-5 w-auto re-icon" alt="Like" />
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </section>
</div>

<!-- Modal oculto para retweet -->
<div id="retweetModal" class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 hidden">
    <div class="bg-white p-6 rounded-md shadow-lg w-1/3">
        <h2 class="text-lg font-bold mb-4">Add a message to your retweet</h2>
        <input type="text" id="retweetMessage" class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm mb-4" placeholder="Type your message here" />
        <div class="flex justify-end gap-4">
            <button id="cancelRetweet" class="px-4 py-2 bg-gray-300 rounded">Cancel</button>
            <button id="confirmRetweet" class="px-4 py-2 bg-twitter-primary text-white rounded">Retweet</button>
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('button[id^="likeButton-"]').forEach(button => {
        button.addEventListener('click', async function () {
            const tweetId = this.getAttribute('data-tweet-id');
            const likeCountElement = document.getElementById(`likeCount-${tweetId}`);
            const likeIcon = this.querySelector('.like-icon');
            const url = '@Url.Action("Like", "Home")';
            console.log(url);
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ tweetId: tweetId })
                });

                if (response.ok) {
                    const data = await response.json();
                    
                    // Actualiza el contador de likes
                    likeCountElement.textContent = data.newLikeCount;

                    // Cambia el ícono dependiendo del estado actual
                    if (likeIcon.src.includes('HeartFull.svg')) {
                        likeIcon.src = '@Url.Content("~/assets/Heart.svg")'; // Cambiar a ícono vacío
                    } else {
                        likeIcon.src = '@Url.Content("~/assets/HeartFull.svg")'; // Cambiar a ícono lleno
                    }
                } else {
                    console.error('Error al dar like');
                }
            } catch (error) {
                console.error('Error de red:', error);
            }
        });
    });
    
    document.querySelectorAll('button[id^="reButton-"]').forEach(button => {
        button.addEventListener('click', function () {
            const tweetId = this.getAttribute('data-tweet-id');
            document.getElementById('retweetModal').classList.remove('hidden');
            document.getElementById('confirmRetweet').setAttribute('data-tweet-id', tweetId);
        });
    });

    document.getElementById('cancelRetweet').addEventListener('click', function () {
        document.getElementById('retweetModal').classList.add('hidden');
    });

    document.getElementById('confirmRetweet').addEventListener('click', async function () {
        const tweetId = this.getAttribute('data-tweet-id');
        const message = document.getElementById('retweetMessage').value;

        try {
            const response = await fetch('/Home/Retweet', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ TweetId: tweetId, Content: message })
            });

            if (response.ok) {
                document.getElementById('retweetModal').classList.add('hidden');
                alert('Retweet exitoso!');
            } else {
                console.error('Error al dar retweet');
            }
        } catch (error) {
            console.error('Error de red:', error);
        }
    });

</script>

<!-- Script para la cuenta de caracteres -->
<script>
    const tweetInput = document.getElementById('tweetInput');
    const charCount = document.getElementById('charCount');
    const maxChars = 200;

    // Escucha el evento 'input' para detectar cambios en el texto
    tweetInput.addEventListener('input', function() {
        const remainingChars = maxChars - tweetInput.value.length;
        charCount.textContent = remainingChars;
    });
</script>